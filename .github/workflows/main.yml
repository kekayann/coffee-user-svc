name: Send Logs to API

on:
  workflow_dispatch:
    inputs:
      logs:
        description: 'Logs to send'
        required: true

jobs:
  send-logs:
    runs-on: ubuntu-latest
    outputs:
      identified-files: ${{ steps.send-logs.outputs.identified-files }}
    steps:
      - name: Install jq
        run: sudo apt-get install jq
        
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get file paths
        id: get-file-paths
        run: |
          files=$(git ls-files)
          IFS=$'\n' read -r -d '' -a file_paths <<<"$files"
          json_file_paths=$(jq -n --argjson paths "${file_paths[*]}" '$paths')
          echo "::set-output name=file-paths::$json_file_paths"

      - name: Send logs to API
        id: send-logs
        env:
          API_URL: https://0700-124-43-238-46.ngrok-free.app/identify-files
          LOGS: ${{ github.event.inputs.logs }}
          FILE_PATHS: ${{ steps.get-file-paths.outputs.file-paths }}
        run: |
          response=$(curl -X POST -H "Content-Type: application/json" \
            -d '{"error_message": "$LOGS", "available_files": "$FILE_PATHS"}' \
            $API_URL)

          echo "HEREEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEE"
          echo "HERE: $response"
          identifiedFiles=$(echo "$response" | jq -r '.data.identified_files')
          echo "::set-output name=identified-files::$identifiedFiles"

  send-file:
    needs: send-logs
    runs-on: ubuntu-latest
    outputs:
      corrected-files: ${{ steps.send-file.outputs.corrected-files }}
    steps:
      - name: Read the file
        id: read-file
        run: |
          file_path=${{ needs.send-logs.outputs.identified-files }}
          file_content=$(cat "$file_path")
          echo "::set-output name=file-content::$file_content"

      - name: Send file to API
        id: send-file
        env:
          API_URL: https://0700-124-43-238-46.ngrok-free.app/correct-errors
          FILE_CONTENT: ${{ steps.read-file.outputs.file-content }}
        run: |
          response=$(curl -X POST -H "Content-Type: application/json" \
            -d '{"file_contents": {}"'"$FILE_CONTENT"'"}' \
            $API_URL)
          correctedFiles=$(echo "$response" | jq -r '.data.corrected_files')
          echo "::set-output name=corrected-files::$response.correctedFiles"

  modify-file:
    needs: 
      - send-logs
      - send-file
    runs-on: ubuntu-latest
    steps:
      - name: Modify the file
        run: |
          file_path=${{ needs.send-logs.outputs.identified-files }}
          corrected-data=${{ needs.send-file.outputs.corrected-files }}
          echo "$corrected-data" > "$file_path"







